debug:
  # Provides everything related to the debug mode.

  # Activates the debug/logging.
  active: no
  # Sets the logging level.
  level: info

cli_decoding:
  # Provides everything related to the decoding from the CLI.

  # Activates the aggressive decoding.
  aggressive: no

  # Activates the decoding using the adblock decoder.
  adblock: no

  # Activates the decoding using the RPZ decoder.
  rpz: no

  # Activated the decoding using the Wildcard decoder.
  wildcard: no

cli_testing:
  # Provides everything directly related to the CLI testing.

  # Sets the Hosts IP to use while generation the hosts file(s)
  hosts_ip: "0.0.0.0"

  # Sets the number of maximal workers to use.
  # If set to null, the system use: CPU * Cores - 2
  max_workers: null

  # Activates the automatic continuation after a break or shortage.
  autocontinue: no

  # Activates the storage and creation of a database of all INACTIVA and INVALID
  # subjects for continuous testing.
  inactive_db: yes

  # Activates the storage of some WHOIS information in order to avoid having
  # to spam the WHOIS servers.
  whois_db: yes

  # Activates the generation of complements.
  complements: no

  # Activates the expansion of CIDR to single addresses.
  cidr_expand: no

  # Sets the cooldown time to apply between each tests.
  cooldown_time: 0.0

  # Sets the Database Connector type to use.
  # Available: csv | mariadb | mysql | postgresql
  db_type: csv

  # Sets the filter to apply while reading the given input.
  # For example, if you give `\.info`, we will only test the subjects who match
  # `\.info`.
  file_filter: null

  # Activates the mining of data.
  mining: no

  # Acknowledges that we may test for local network component.
  # NOTE: Activating this, will remove the syntax checker completely.
  local_network: no

  # Activates or disable the preloading of the given input file(s).
  # When this is activated, we take the time to pre load and decode the content
  # of your file so that we can optimize some of our process regarding the
  # auto continue.
  #
  # Note: This has no effect if the auto-continue is deactivated.
  preload_file: no

  # Activates or disables a chancy tester mode that unleashes the safety
  # workflow in place.
  #
  # WARNING:
  #   You shouldn't have to use this unless you feel really lucky and trust your
  #   machine.
  #
  #   This mode makes things look 'fast', but it may produce some unexpected
  #   results if :code:`N` process simultaneously write the same output file.
  #
  #   This mode makes the graphical CLI output unparsable - either.
  #
  #   **MAY THE FORCE BE WITH YOU!**
  chancy_tester: no

  ci:
    # Provides everything related to the Continuous integration.

    # Activates the continuous integration mode.
    # WARNING: Do not activate without asking or knowing what you are doing.
    active: no

    # Sets the commit message to apply everytime except for the last one.
    commit_message: "PyFunceble - AutoSave"

    # Sets the commit message to apply at the very end of the test.
    end_commit_message: "PyFunceble - Results"

    # Sets the number of minutes  to wait before starting to save and stop
    # a session.
    max_exec_minutes: 15

    # Sets the working branch. This is the branch from where we are testing.
    branch: master

    # Sets the distribution branch. This is the branch that is going to get
    # the (final) results.
    distribution_branch: master

    # Sets the command to execute everytime before each commits except the last
    # one.
    command: null

    # Sets the command to execute before the last commit.
    end_command: null

  display_mode:
    # Provides everything related to the display mode.

    # Activates the printing of dots.
    dots: no

    # Activates the printing of the execution time.
    execution_time: no

    # Activates the output of the percentage information.
    percentage: yes

    # Activates the output of the top registrar information.
    registrar: no

    # Activates the quiet mode.
    quiet: no

    # Activates the output of very few information.
    less: yes

    # Activates the output of all information.
    all: no

    # Activates the output of the status and it's status (only)
    simple: no

    # Activates the coloration of stdout.
    colour: yes

    # Sets the status do display to STDOUT.
    # NOTE: This does not have any effect with the generated files.
    # Available values: ALL | ACTIVE | INACTIVE | INVALID | SANE | MALICIOUS
    status: all

    # Sets the maximum number of registrar to display.
    # NOTE: This does not have any effect with the generated files.
    max_registrar: 15

  testing_mode:
    # Provides all available testing modes.
    # WARNING: Only one can be used at a time.

    # Activates the availability test.
    availability: yes

    # Activates the syntax test.
    syntax: no

    # Activates the reputation test.
    reputation: no

  days_between:
    # Provides everything which is x days periodic.

    # NOT IMPLEMENTED (Anticipation for future usage).
    db_clean: 28

    # Provides the number of days to wait before retesting subject which were
    # stored into the inactive database.
    db_retest: 1

  sorting_mode:
    # Provides all our sorting mode.
    # WARNING: The sorting mode is only applied to the files. NOT STDOUT.

    # Activates the hierarchical sorting.
    hierarchical: no

    # Activates the standard sorting.
    standard: yes

  file_generation:
    # Provides everything related to the generation of file.

    # Deactivates the generation of any status file.
    no_file: no

    # Activates the generation of the hosts file(s).
    hosts: no

    # Activates the generation of the plain (or raw) file(s).
    plain: yes

    # Activates the generation of the analytic file(s).
    analytic: yes

    # Activate the generation of an unified file for the copy of what is
    # outputted to STDOUT.
    unified_results: no

    # Activates or disables the merging of the results of all inputted files into
    # one single output subdirectory.
    merge_output_dirs: no

lookup:
  # Provides everything related to the lookup.

  # Activates the usage of the DNS lookup.
  dns: yes

  # Activates the usage of the HTTP status code lookup.
  http_status_code: yes

  # Activates the usage of the network information socket.
  netinfo: yes

  # Activates the usage of our special rules.
  special: yes

  # Activates the usage of the WHOIS record.
  whois: yes

  # Activates the usage of the reputation data reputation.
  reputation: no

  # Activate the usage of the collection.
  collection: no

  # Sets the timeout to apply to each of our lookup tools who support a timeout
  # option.
  timeout: 5

dns:
  # Provides everything related to the DNS lookup.

  # Activates the follow-up of the given order.
  follow_server_order: yes

  # Activates the trust mode. Meaning that if one of the DNS give us a negative
  # response (without error), we take it as it is.
  # When this mode is deactivated (no), when one of the DNS give us a negative
  # response (without error), we still ask all other servers.
  trust_server: no

  # Sets the list of server to communicate with.
  # It must be a list.
  #
  # WARNING:
  #   IPv6 should be given in this format if a port is explicitly given:
  #     [ip]:port
  #   If you omit the braket, the port will be set to the default one (53).
  #
  # As example:
  #   - first.dns
  #   - second.dns
  #
  server: null

  # Sets the protocol to use.
  # Available: UDP | TCP | HTTPS | TLS
  protocol: UDP

  # Sets the delay (seconds) to apply between each queries.
  # When a value > 0.00000 is given, we will wait for the given amount of
  # seconds between each queries.
  delay: 0.0

# Not Implemented yet. Reserved for future usage and implementation.
share_logs: no

user_agent:
  # Provides everything related to the user agent choice.

  browser: chrome
  platform: linux

  # Sets the user agent to use.
  # WARNING: If given, this will be used systematically.
  custom: null

proxy:
  # Provides everything related to the proxy.
  #
  # The idea:
  #   We have two main keys, "global" and "rules".
  #   The system will always follow the global keys unless you define an explit
  #   TLD.
  #
  # Example:
  #
  #   Let's say we want all HTTP requests to go through example.org but we want
  #   all HTTP request for domains ending with `.com`, `.org` and `.dev` to go
  #   through example.com. And, we want all domains ending with `.onion` to go
  #   through example.dev.
  #
  #   This is how it will look like.
  #
  #       global:
  #         http: http://example.org:8080
  #         https: http://example.org:8080
  #
  #       rules:
  #         - http: http://example.com:8080
  #           https: http://example.org:8080
  #           tld:
  #             - com
  #             - org
  #             - dev
  #         - http: socks5h://example.dev:8080
  #           https: socks5h://example.dev:8080
  #           tld:
  #             - onion
  #

  global:
    # Global HTTP proxy to use when no rule is given or matched.
    http: null
    # Global HTTPS proxy to use when no rule is given or matched.
    https: null

  rules: []


# Activates the verification of the certificate.
verify_ssl_certificate: no

# Set the maximum number of retries to perform.
# This should be an integer >= 0.
max_http_retries: 3

http_codes:
  # Provides everything related to the HTTP code lookup interpretation.

  # Informs PyFunceble that the end-user (not PyFunceble) is managing this list.
  # This means that you won't get any update in this section.
  self_managed: no

  list:
    up:
      - 100
      - 101
      - 102
      - 200
      - 201
      - 202
      - 203
      - 204
      - 205
      - 206
      - 207
      - 208
      - 226
      - 429
    potentially_down:
      - 400
      - 402
      - 404
      - 409
      - 410
      - 412
      - 414
      - 415
      - 416
      - 451
    potentially_up:
      - 000
      - 300
      - 301
      - 302
      - 303
      - 304
      - 305
      - 307
      - 308
      - 403
      - 405
      - 406
      - 407
      - 408
      - 411
      - 413
      - 417
      - 418
      - 421
      - 422
      - 423
      - 424
      - 426
      - 428
      - 431
      - 500
      - 501
      - 502
      - 503
      - 504
      - 505
      - 506
      - 507
      - 508
      - 510
      - 511

links:
  # Provides some of our API links.
  # NOTE: Not implemented yet as the underlaying infrastructure will be
  # rewritten.
  api_date_format: "https://pyfunceble.funilrys.com/api/date-format"
  api_no_referrer: "https://pyfunceble.funilrys.com/api/no-referrer"

collection:
  # Provides everything related to the collection.

  # Provides the base of the URL to access to communicate with the collection.
  url_base: https://collection.dead-hosts.funilrys.com

  # Activates the push of dataset into the collection.
  # WARNING: This is useless, if you don't have an API Token set as the
  # COLLECTION_API_TOKEN environment variable.
  push: no

  # Sets the preferred pull origin.
  #
  # When choosing, `frequent`, the system will pull the most frequent status
  # that is provided and calculated by the collection.
  #
  # When choosing, `latest`, the system will pull the latest status that is
  # provided and available into the collection.
  #
  # Available: frequent | latest | recommended
  preferred_status_origin: recommended
